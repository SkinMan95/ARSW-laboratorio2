================
PARTE 1
1. Revise el funcionamiento del programa y ejecútelo. Mientras esto ocurren, ejecute jVisualVM y revise el consumo de CPU del proceso correspondiente. ¿A qué se debe este consumo?, ¿Cual es la clase responsable?
R: Se debe a que el consumidor esta haciendo una espera activa a que la cola donde esta el producto tenga algo, por lo que el uso de la CPU es alto.

================
PARTE 3

2. Revise el código e identifique cómo se implemento la funcionalidad antes indicada. Dada la intención del juego, un invariante debería ser que la sumatoria de los puntos de vida de todos los jugadores siempre sea el mismo(claro está, en un instante de tiempo en el que no esté en proceso una operación de incremento/reducción de tiempo). Para este caso, para N jugadores, cual debería ser este valor?.

R: Debido a que la salud por defecto de los N jugadores es 100, entonces la suma de las saludes debe ser igual
a 100*N.

3. Ejecute la aplicación y verifique cómo funcionan las opción ‘pause and check’. Se cumple el invariante?.

R: No se cumple, aumenta con el tiempo.


